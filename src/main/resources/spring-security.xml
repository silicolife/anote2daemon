<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                        http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">



	<beans:bean id="usersLogged"
		class="pt.uminho.anote2.datastructures.dataaccess.database.dataaccess.implementation.model.core.dao.UsersLoggedImpl"
		scope="session">
		<aop:scoped-proxy proxy-target-class="false" />
	</beans:bean>


	<!-- Http entry point to login -->
	<http entry-point-ref="restAuthenticationEntryPoint"
		authentication-manager-ref="authenticationManager">
		<intercept-url pattern="/**" />
		<form-login authentication-success-handler-ref="restAuthenticationSuccessHandler"
			authentication-failure-handler-ref="restAuthenticationFailureHandler" />
		<logout logout-url="/j_spring_security_logout"
			invalidate-session="true" delete-cookies="JSESSIONID"
			success-handler-ref="logoutSuccessHandler" />
	</http>


	<!-- Entry point for REST service. -->
	<beans:bean id="restAuthenticationEntryPoint"
		class="com.silicolife.anote2daemon.security.RestAuthenticationEntryPoint" />

	<!-- Connect the custom authentication success handler -->
	<beans:bean id="restAuthenticationSuccessHandler"
		class="com.silicolife.anote2daemon.security.RestAuthenticationSuccessHandler">
	</beans:bean>

	<!-- Using default failure handler -->
	<beans:bean id="restAuthenticationFailureHandler"
		class="com.silicolife.anote2daemon.security.RestAuthenticationFailureHandler" />

	<!-- Logout success -->
	<beans:bean id="logoutSuccessHandler"
		class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler" />


	<!-- Create object user Spring -->
	<beans:bean id="userDetailsService"
		class="com.silicolife.anote2daemon.service.users.UsersServiceImpl"
		autowire="constructor" />

	<!-- Custom authentication provider -->
	<beans:bean id="customAuthenticationProvider"
		class="com.silicolife.anote2daemon.security.RestAuthenticationProvider">
		<beans:constructor-arg ref="userDetailsService" />
		<beans:constructor-arg ref="passwordEncoder" />
	</beans:bean>

	<!-- Password encoder sha256 -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<beans:constructor-arg value="256" />
		<beans:property name="iterations" value="1000000">
		</beans:property>
	</beans:bean>

	<!-- Authentication Manager -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider" />
	</authentication-manager>

	<!-- Enable the annotations for defining the secure role -->
	<!-- <global-method-security secured-annotations="enabled" /> -->

	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="expressionHandler" />
	</global-method-security>

	<beans:bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="myPermissionEvaluator" />
	</beans:bean>

	<beans:bean id="myPermissionEvaluator"
		class="com.silicolife.anote2daemon.security.RestPermissionsEvaluator">
		<beans:constructor-arg ref="userDetailsService" />
	</beans:bean>

	<context:component-scan base-package="com.silicolife.anote2daemon.model" />
	<context:component-scan
		base-package="pt.uminho.anote2.datastructures.dataaccess.database.dataaccess.implementation.model" />

</beans:beans>