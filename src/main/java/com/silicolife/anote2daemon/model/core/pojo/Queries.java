package com.silicolife.anote2daemon.model.core.pojo;

// Generated 5/Fev/2015 14:40:20 by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Queries generated by hbm2java
 */
@Entity
@Table(name = "queries")
public class Queries implements java.io.Serializable {

	private long id;
	private QueriesType queriesType;
	private Date queryDate;
	private String keywords;
	private String organism;
	private String completeQuery;
	private Integer matchingPublications;
	private Integer availableAbstracts;
	private String queryName;
	private boolean active;
	private String notes;
	private Set<QueriesHasPublications> queriesHasPublicationses = new HashSet<QueriesHasPublications>(0);
	private Set<QueriesProperties> queriesPropertieses = new HashSet<QueriesProperties>(0);
	private Set<QueriesHasClustersProcess> queriesHasClustersProcesses = new HashSet<QueriesHasClustersProcess>(0);
	private Set<PublicationsQueryRelevance> publicationsQueryRelevances = new HashSet<PublicationsQueryRelevance>(0);

	public Queries() {
	}

	public Queries(long id, QueriesType queriesType, Date queryDate, String keywords, boolean active) {
		this.id = id;
		this.queriesType = queriesType;
		this.queryDate = queryDate;
		this.keywords = keywords;
		this.active = active;
	}

	public Queries(long id, QueriesType queriesType, Date queryDate, String keywords, String organism, String completeQuery, Integer matchingPublications, Integer availableAbstracts, String queryName, boolean active, String notes,
			Set<QueriesHasPublications> queriesHasPublicationses, Set<QueriesProperties> queriesPropertieses, Set<QueriesHasClustersProcess> queriesHasClustersProcesses, Set<PublicationsQueryRelevance> publicationsQueryRelevances) {
		this.id = id;
		this.queriesType = queriesType;
		this.queryDate = queryDate;
		this.keywords = keywords;
		this.organism = organism;
		this.completeQuery = completeQuery;
		this.matchingPublications = matchingPublications;
		this.availableAbstracts = availableAbstracts;
		this.queryName = queryName;
		this.active = active;
		this.notes = notes;
		this.queriesHasPublicationses = queriesHasPublicationses;
		this.queriesPropertieses = queriesPropertieses;
		this.queriesHasClustersProcesses = queriesHasClustersProcesses;
		this.publicationsQueryRelevances = publicationsQueryRelevances;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "query_type_id", nullable = false)
	public QueriesType getQueriesType() {
		return this.queriesType;
	}

	public void setQueriesType(QueriesType queriesType) {
		this.queriesType = queriesType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "query_date", nullable = false, length = 19)
	public Date getQueryDate() {
		return this.queryDate;
	}

	public void setQueryDate(Date queryDate) {
		this.queryDate = queryDate;
	}

	@Column(name = "keywords", nullable = false, length = 16777215)
	public String getKeywords() {
		return this.keywords;
	}

	public void setKeywords(String keywords) {
		this.keywords = keywords;
	}

	@Column(name = "organism", length = 500)
	public String getOrganism() {
		return this.organism;
	}

	public void setOrganism(String organism) {
		this.organism = organism;
	}

	@Column(name = "complete_query", length = 65535)
	public String getCompleteQuery() {
		return this.completeQuery;
	}

	public void setCompleteQuery(String completeQuery) {
		this.completeQuery = completeQuery;
	}

	@Column(name = "matching_publications")
	public Integer getMatchingPublications() {
		return this.matchingPublications;
	}

	public void setMatchingPublications(Integer matchingPublications) {
		this.matchingPublications = matchingPublications;
	}

	@Column(name = "available_abstracts")
	public Integer getAvailableAbstracts() {
		return this.availableAbstracts;
	}

	public void setAvailableAbstracts(Integer availableAbstracts) {
		this.availableAbstracts = availableAbstracts;
	}

	@Column(name = "query_name", length = 500)
	public String getQueryName() {
		return this.queryName;
	}

	public void setQueryName(String queryName) {
		this.queryName = queryName;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "notes", length = 65535)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "queries")
	public Set<QueriesHasPublications> getQueriesHasPublicationses() {
		return this.queriesHasPublicationses;
	}

	public void setQueriesHasPublicationses(Set<QueriesHasPublications> queriesHasPublicationses) {
		this.queriesHasPublicationses = queriesHasPublicationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "queries")
	public Set<QueriesProperties> getQueriesPropertieses() {
		return this.queriesPropertieses;
	}

	public void setQueriesPropertieses(Set<QueriesProperties> queriesPropertieses) {
		this.queriesPropertieses = queriesPropertieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "queries")
	public Set<QueriesHasClustersProcess> getQueriesHasClustersProcesses() {
		return this.queriesHasClustersProcesses;
	}

	public void setQueriesHasClustersProcesses(Set<QueriesHasClustersProcess> queriesHasClustersProcesses) {
		this.queriesHasClustersProcesses = queriesHasClustersProcesses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "queries")
	public Set<PublicationsQueryRelevance> getPublicationsQueryRelevances() {
		return this.publicationsQueryRelevances;
	}

	public void setPublicationsQueryRelevances(Set<PublicationsQueryRelevance> publicationsQueryRelevances) {
		this.publicationsQueryRelevances = publicationsQueryRelevances;
	}

}
