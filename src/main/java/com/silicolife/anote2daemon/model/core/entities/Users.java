package com.silicolife.anote2daemon.model.core.entities;

// Generated 5/Fev/2015 14:40:20 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", uniqueConstraints = { @UniqueConstraint(columnNames = "username"), @UniqueConstraint(columnNames = "email") })
public class Users implements java.io.Serializable {

	private long id;
	private UsersGroups usersGroups;
	private String username;
	private String userPassword;
	private String fullname;
	private String email;
	private Integer phone;
	private String address;
	private String zipCode;
	private String location;
	private Set<UsersGeneralSettings> usersGeneralSettingses = new HashSet<UsersGeneralSettings>(0);
	private Set<UsersLog> usersLogs = new HashSet<UsersLog>(0);
	private Set<UsersHasDataObject> usersHasDataObjects = new HashSet<UsersHasDataObject>(0);

	public Users() {
	}

	public Users(long id, UsersGroups usersGroups, String username, String userPassword, String fullname, String email) {
		this.id = id;
		this.usersGroups = usersGroups;
		this.username = username;
		this.userPassword = userPassword;
		this.fullname = fullname;
		this.email = email;
	}

	public Users(long id, UsersGroups usersGroups, String username, String userPassword, String fullname, String email, Integer phone, String address, String zipCode, String location, Set<UsersGeneralSettings> usersGeneralSettingses, Set<UsersLog> usersLogs,
			Set<UsersHasDataObject> usersHasDataObjects) {
		this.id = id;
		this.usersGroups = usersGroups;
		this.username = username;
		this.userPassword = userPassword;
		this.fullname = fullname;
		this.email = email;
		this.phone = phone;
		this.address = address;
		this.zipCode = zipCode;
		this.location = location;
		this.usersGeneralSettingses = usersGeneralSettingses;
		this.usersLogs = usersLogs;
		this.usersHasDataObjects = usersHasDataObjects;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "groups_id", nullable = false)
	public UsersGroups getUsersGroups() {
		return this.usersGroups;
	}

	public void setUsersGroups(UsersGroups usersGroups) {
		this.usersGroups = usersGroups;
	}

	@Column(name = "username", unique = true, nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "user_password", nullable = false)
	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}

	@Column(name = "fullname", nullable = false)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone")
	public Integer getPhone() {
		return this.phone;
	}

	public void setPhone(Integer phone) {
		this.phone = phone;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "zip_code", length = 16)
	public String getZipCode() {
		return this.zipCode;
	}

	public void setZipCode(String zipCode) {
		this.zipCode = zipCode;
	}

	@Column(name = "location")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UsersGeneralSettings> getUsersGeneralSettingses() {
		return this.usersGeneralSettingses;
	}

	public void setUsersGeneralSettingses(Set<UsersGeneralSettings> usersGeneralSettingses) {
		this.usersGeneralSettingses = usersGeneralSettingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UsersLog> getUsersLogs() {
		return this.usersLogs;
	}

	public void setUsersLogs(Set<UsersLog> usersLogs) {
		this.usersLogs = usersLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UsersHasDataObject> getUsersHasDataObjects() {
		return this.usersHasDataObjects;
	}

	public void setUsersHasDataObjects(Set<UsersHasDataObject> usersHasDataObjects) {
		this.usersHasDataObjects = usersHasDataObjects;
	}

}
