package com.silicolife.anote2daemon.model.core.entities;

// Generated 5/Fev/2015 14:40:20 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Processes generated by hbm2java
 */
@Entity
@Table(name = "processes")
public class Processes implements java.io.Serializable {

	private long id;
	private ProcessesType processesType;
	private ProcessesOrigin processesOrigin;
	private String processName;
	private String notes;
	private boolean active;
	private Set<ProcessesProperties> processesPropertieses = new HashSet<ProcessesProperties>(0);
	private Set<CorpusHasProcesses> corpusHasProcesseses = new HashSet<CorpusHasProcesses>(0);
	private Set<Annotations> annotationses = new HashSet<Annotations>(0);
	private Set<AnnotationsLog> annotationsLogs = new HashSet<AnnotationsLog>(0);

	public Processes() {
	}

	public Processes(long id, ProcessesType processesType, ProcessesOrigin processesOrigin, boolean active) {
		this.id = id;
		this.processesType = processesType;
		this.processesOrigin = processesOrigin;
		this.active = active;
	}

	public Processes(long id, ProcessesType processesType, ProcessesOrigin processesOrigin, String processName, String notes, boolean active, Set<ProcessesProperties> processesPropertieses, Set<CorpusHasProcesses> corpusHasProcesseses, Set<Annotations> annotationses,
			Set<AnnotationsLog> annotationsLogs) {
		this.id = id;
		this.processesType = processesType;
		this.processesOrigin = processesOrigin;
		this.processName = processName;
		this.notes = notes;
		this.active = active;
		this.processesPropertieses = processesPropertieses;
		this.corpusHasProcesseses = corpusHasProcesseses;
		this.annotationses = annotationses;
		this.annotationsLogs = annotationsLogs;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "processes_type_id", nullable = false)
	public ProcessesType getProcessesType() {
		return this.processesType;
	}

	public void setProcessesType(ProcessesType processesType) {
		this.processesType = processesType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "process_origin_id", nullable = false)
	public ProcessesOrigin getProcessesOrigin() {
		return this.processesOrigin;
	}

	public void setProcessesOrigin(ProcessesOrigin processesOrigin) {
		this.processesOrigin = processesOrigin;
	}

	@Column(name = "process_name", length = 500)
	public String getProcessName() {
		return this.processName;
	}

	public void setProcessName(String processName) {
		this.processName = processName;
	}

	@Column(name = "notes", length = 65535)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "processes")
	public Set<ProcessesProperties> getProcessesPropertieses() {
		return this.processesPropertieses;
	}

	public void setProcessesPropertieses(Set<ProcessesProperties> processesPropertieses) {
		this.processesPropertieses = processesPropertieses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "processes")
	public Set<CorpusHasProcesses> getCorpusHasProcesseses() {
		return this.corpusHasProcesseses;
	}

	public void setCorpusHasProcesseses(Set<CorpusHasProcesses> corpusHasProcesseses) {
		this.corpusHasProcesseses = corpusHasProcesseses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "processes")
	public Set<Annotations> getAnnotationses() {
		return this.annotationses;
	}

	public void setAnnotationses(Set<Annotations> annotationses) {
		this.annotationses = annotationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "processes")
	public Set<AnnotationsLog> getAnnotationsLogs() {
		return this.annotationsLogs;
	}

	public void setAnnotationsLogs(Set<AnnotationsLog> annotationsLogs) {
		this.annotationsLogs = annotationsLogs;
	}

}
