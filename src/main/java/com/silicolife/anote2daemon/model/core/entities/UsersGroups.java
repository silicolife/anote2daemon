package com.silicolife.anote2daemon.model.core.entities;

// Generated 5/Fev/2015 14:40:20 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * UsersGroups generated by hbm2java
 */
@Entity
@Table(name = "users_groups", uniqueConstraints = @UniqueConstraint(columnNames = "description"))
public class UsersGroups implements java.io.Serializable {

	private Long id;
	private String description;
	private Set<UsersGroupsHasUsersAccessLevels> usersGroupsHasUsersAccessLevelses = new HashSet<UsersGroupsHasUsersAccessLevels>(0);
	private Set<Users> userses = new HashSet<Users>(0);

	public UsersGroups() {
	}

	public UsersGroups(String description) {
		this.description = description;
	}

	public UsersGroups(String description, Set<UsersGroupsHasUsersAccessLevels> usersGroupsHasUsersAccessLevelses, Set<Users> userses) {
		this.description = description;
		this.usersGroupsHasUsersAccessLevelses = usersGroupsHasUsersAccessLevelses;
		this.userses = userses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "description", unique = true, nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersGroups")
	public Set<UsersGroupsHasUsersAccessLevels> getUsersGroupsHasUsersAccessLevelses() {
		return this.usersGroupsHasUsersAccessLevelses;
	}

	public void setUsersGroupsHasUsersAccessLevelses(Set<UsersGroupsHasUsersAccessLevels> usersGroupsHasUsersAccessLevelses) {
		this.usersGroupsHasUsersAccessLevelses = usersGroupsHasUsersAccessLevelses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usersGroups")
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

}
