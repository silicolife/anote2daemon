package com.silicolife.anote2daemon.model.pojo;

// Generated 3/Fev/2015 12:37:09 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * DaemonUsers generated by hbm2java
 */
@Entity
@Table(name = "daemon_users", uniqueConstraints = { @UniqueConstraint(columnNames = "username"), @UniqueConstraint(columnNames = "email") })
public class DaemonUsers implements java.io.Serializable {

	private long id;
	private DaemonGroups daemonGroups;
	private String username;
	private String password;
	private String name;
	private String email;
	private Integer phone;
	private String address;
	private String zipCode;
	private String location;
	private Set<DaemonLog> daemonLogs = new HashSet<DaemonLog>(0);
	private Set<DaemonUsersHasDataObject> daemonUsersHasDataObjects = new HashSet<DaemonUsersHasDataObject>(0);

	public DaemonUsers() {
	}

	public DaemonUsers(long id, DaemonGroups daemonGroups, String username, String password, String name, String email) {
		this.id = id;
		this.daemonGroups = daemonGroups;
		this.username = username;
		this.password = password;
		this.name = name;
		this.email = email;
	}

	public DaemonUsers(long id, DaemonGroups daemonGroups, String username, String password, String name, String email, Integer phone, String address, String zipCode, String location, Set<DaemonLog> daemonLogs, Set<DaemonUsersHasDataObject> daemonUsersHasDataObjects) {
		this.id = id;
		this.daemonGroups = daemonGroups;
		this.username = username;
		this.password = password;
		this.name = name;
		this.email = email;
		this.phone = phone;
		this.address = address;
		this.zipCode = zipCode;
		this.location = location;
		this.daemonLogs = daemonLogs;
		this.daemonUsersHasDataObjects = daemonUsersHasDataObjects;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "groups_id", nullable = false)
	public DaemonGroups getDaemonGroups() {
		return this.daemonGroups;
	}

	public void setDaemonGroups(DaemonGroups daemonGroups) {
		this.daemonGroups = daemonGroups;
	}

	@Column(name = "username", unique = true, nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone")
	public Integer getPhone() {
		return this.phone;
	}

	public void setPhone(Integer phone) {
		this.phone = phone;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "zip_code", length = 16)
	public String getZipCode() {
		return this.zipCode;
	}

	public void setZipCode(String zipCode) {
		this.zipCode = zipCode;
	}

	@Column(name = "location")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "daemonUsers")
	public Set<DaemonLog> getDaemonLogs() {
		return this.daemonLogs;
	}

	public void setDaemonLogs(Set<DaemonLog> daemonLogs) {
		this.daemonLogs = daemonLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "daemonUsers")
	public Set<DaemonUsersHasDataObject> getDaemonUsersHasDataObjects() {
		return this.daemonUsersHasDataObjects;
	}

	public void setDaemonUsersHasDataObjects(Set<DaemonUsersHasDataObject> daemonUsersHasDataObjects) {
		this.daemonUsersHasDataObjects = daemonUsersHasDataObjects;
	}

}
