package com.silicolife.anote2daemon.model.pojo;

// Generated 27/Jan/2015 18:22:29 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ResourceElements generated by hbm2java
 */
@Entity
@Table(name = "resource_elements")
public class ResourceElements implements java.io.Serializable {

	private long id;
	private Resources resources;
	private Long classesId;
	private String element;
	private Integer priorety;
	private boolean active;
	private Set<Annotations> annotationses = new HashSet<Annotations>(0);
	private Set<ResourceElementsRelation> resourceElementsRelationsForResourceElementsIdA = new HashSet<ResourceElementsRelation>(0);
	private Set<ResourceElementsExtenalId> resourceElementsExtenalIds = new HashSet<ResourceElementsExtenalId>(0);
	private Set<Synonyms> synonymses = new HashSet<Synonyms>(0);
	private Set<ResourceElementsRelation> resourceElementsRelationsForResourceElementsIdB = new HashSet<ResourceElementsRelation>(0);

	public ResourceElements() {
	}

	public ResourceElements(long id, Resources resources, String element, boolean active) {
		this.id = id;
		this.resources = resources;
		this.element = element;
		this.active = active;
	}

	public ResourceElements(long id, Resources resources, Long classesId, String element, Integer priorety, boolean active, Set<Annotations> annotationses, Set<ResourceElementsRelation> resourceElementsRelationsForResourceElementsIdA,
			Set<ResourceElementsExtenalId> resourceElementsExtenalIds, Set<Synonyms> synonymses, Set<ResourceElementsRelation> resourceElementsRelationsForResourceElementsIdB) {
		this.id = id;
		this.resources = resources;
		this.classesId = classesId;
		this.element = element;
		this.priorety = priorety;
		this.active = active;
		this.annotationses = annotationses;
		this.resourceElementsRelationsForResourceElementsIdA = resourceElementsRelationsForResourceElementsIdA;
		this.resourceElementsExtenalIds = resourceElementsExtenalIds;
		this.synonymses = synonymses;
		this.resourceElementsRelationsForResourceElementsIdB = resourceElementsRelationsForResourceElementsIdB;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "resources_id", nullable = false)
	public Resources getResources() {
		return this.resources;
	}

	public void setResources(Resources resources) {
		this.resources = resources;
	}

	@Column(name = "classes_id")
	public Long getClassesId() {
		return this.classesId;
	}

	public void setClassesId(Long classesId) {
		this.classesId = classesId;
	}

	@Column(name = "element", nullable = false, length = 500)
	public String getElement() {
		return this.element;
	}

	public void setElement(String element) {
		this.element = element;
	}

	@Column(name = "priorety")
	public Integer getPriorety() {
		return this.priorety;
	}

	public void setPriorety(Integer priorety) {
		this.priorety = priorety;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "resourceElements")
	public Set<Annotations> getAnnotationses() {
		return this.annotationses;
	}

	public void setAnnotationses(Set<Annotations> annotationses) {
		this.annotationses = annotationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "resourceElementsByResourceElementsIdA")
	public Set<ResourceElementsRelation> getResourceElementsRelationsForResourceElementsIdA() {
		return this.resourceElementsRelationsForResourceElementsIdA;
	}

	public void setResourceElementsRelationsForResourceElementsIdA(Set<ResourceElementsRelation> resourceElementsRelationsForResourceElementsIdA) {
		this.resourceElementsRelationsForResourceElementsIdA = resourceElementsRelationsForResourceElementsIdA;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "resourceElements")
	public Set<ResourceElementsExtenalId> getResourceElementsExtenalIds() {
		return this.resourceElementsExtenalIds;
	}

	public void setResourceElementsExtenalIds(Set<ResourceElementsExtenalId> resourceElementsExtenalIds) {
		this.resourceElementsExtenalIds = resourceElementsExtenalIds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "resourceElements")
	public Set<Synonyms> getSynonymses() {
		return this.synonymses;
	}

	public void setSynonymses(Set<Synonyms> synonymses) {
		this.synonymses = synonymses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "resourceElementsByResourceElementsIdB")
	public Set<ResourceElementsRelation> getResourceElementsRelationsForResourceElementsIdB() {
		return this.resourceElementsRelationsForResourceElementsIdB;
	}

	public void setResourceElementsRelationsForResourceElementsIdB(Set<ResourceElementsRelation> resourceElementsRelationsForResourceElementsIdB) {
		this.resourceElementsRelationsForResourceElementsIdB = resourceElementsRelationsForResourceElementsIdB;
	}

}
