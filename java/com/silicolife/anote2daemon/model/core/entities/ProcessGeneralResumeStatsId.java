package com.silicolife.anote2daemon.model.core.entities;

// Generated 5/Fev/2015 14:40:20 by Hibernate Tools 4.0.0

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * ProcessGeneralResumeStatsId generated by hbm2java
 */
@Embeddable
public class ProcessGeneralResumeStatsId implements java.io.Serializable {

	private long processesId;
	private String annotType;
	private long numberType;

	public ProcessGeneralResumeStatsId() {
	}

	public ProcessGeneralResumeStatsId(long processesId, String annotType, long numberType) {
		this.processesId = processesId;
		this.annotType = annotType;
		this.numberType = numberType;
	}

	@Column(name = "processes_id", nullable = false)
	public long getProcessesId() {
		return this.processesId;
	}

	public void setProcessesId(long processesId) {
		this.processesId = processesId;
	}

	@Column(name = "annot_type", nullable = false, length = 4)
	public String getAnnotType() {
		return this.annotType;
	}

	public void setAnnotType(String annotType) {
		this.annotType = annotType;
	}

	@Column(name = "numberType", nullable = false)
	public long getNumberType() {
		return this.numberType;
	}

	public void setNumberType(long numberType) {
		this.numberType = numberType;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof ProcessGeneralResumeStatsId))
			return false;
		ProcessGeneralResumeStatsId castOther = (ProcessGeneralResumeStatsId) other;

		return (this.getProcessesId() == castOther.getProcessesId()) && ((this.getAnnotType() == castOther.getAnnotType()) || (this.getAnnotType() != null && castOther.getAnnotType() != null && this.getAnnotType().equals(castOther.getAnnotType())))
				&& (this.getNumberType() == castOther.getNumberType());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (int) this.getProcessesId();
		result = 37 * result + (getAnnotType() == null ? 0 : this.getAnnotType().hashCode());
		result = 37 * result + (int) this.getNumberType();
		return result;
	}

}
